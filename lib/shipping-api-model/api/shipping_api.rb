=begin
#Amazon Shipping API

#The Amazon Shipping API is designed to support outbound shipping use cases both for orders originating on Amazon-owned marketplaces as well as external channels/marketplaces. With these APIs, you can request shipping rates, create shipments, cancel shipments, and track shipments.

OpenAPI spec version: v2
Contact: swa-api-core@amazon.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.68
=end

module AmzSpApi::ShippingApiModel
  class ShippingApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Cancels a purchased shipment. Returns an empty object if the shipment is successfully cancelled.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
    # @param shipment_id The shipment identifier originally returned by the purchaseShipment operation.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :x_amzn_shipping_business_id Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
    # @return [CancelShipmentResponse]
    def cancel_shipment(shipment_id, opts = {})
      data, _status_code, _headers = cancel_shipment_with_http_info(shipment_id, opts)
      data
    end

    # Cancels a purchased shipment. Returns an empty object if the shipment is successfully cancelled.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
    # @param shipment_id The shipment identifier originally returned by the purchaseShipment operation.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :x_amzn_shipping_business_id Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
    # @return [Array<(CancelShipmentResponse, Integer, Hash)>] CancelShipmentResponse data, response status code and response headers
    def cancel_shipment_with_http_info(shipment_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ShippingApi.cancel_shipment ...'
      end
      # verify the required parameter 'shipment_id' is set
      if @api_client.config.client_side_validation && shipment_id.nil?
        fail ArgumentError, "Missing the required parameter 'shipment_id' when calling ShippingApi.cancel_shipment"
      end
      if @api_client.config.client_side_validation && opts[:'x_amzn_shipping_business_id'] && !['AmazonShipping_US', 'AmazonShipping_IN', 'AmazonShipping_UK', 'AmazonShipping_UAE', 'AmazonShipping_SA', 'AmazonShipping_EG', 'AmazonShipping_IT', 'AmazonShipping_ES', 'AmazonShipping_FR', 'AmazonShipping_JP'].include?(opts[:'x_amzn_shipping_business_id'])
        fail ArgumentError, 'invalid value for "x_amzn_shipping_business_id", must be one of AmazonShipping_US, AmazonShipping_IN, AmazonShipping_UK, AmazonShipping_UAE, AmazonShipping_SA, AmazonShipping_EG, AmazonShipping_IT, AmazonShipping_ES, AmazonShipping_FR, AmazonShipping_JP'
      end
      # resource path
      local_var_path = '/shipping/v2/shipments/{shipmentId}/cancel'.sub('{' + 'shipmentId' + '}', shipment_id.to_s)

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'x-amzn-shipping-business-id'] = opts[:'x_amzn_shipping_business_id'] if !opts[:'x_amzn_shipping_business_id'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] || 'CancelShipmentResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ShippingApi#cancel_shipment\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This API will be used to create claim for single eligible shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
    # @param body Request body for the createClaim operation
    # @param [Hash] opts the optional parameters
    # @option opts [String] :x_amzn_shipping_business_id Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
    # @return [CreateClaimResponse]
    def create_claim(body, opts = {})
      data, _status_code, _headers = create_claim_with_http_info(body, opts)
      data
    end

    # This API will be used to create claim for single eligible shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
    # @param body Request body for the createClaim operation
    # @param [Hash] opts the optional parameters
    # @option opts [String] :x_amzn_shipping_business_id Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
    # @return [Array<(CreateClaimResponse, Integer, Hash)>] CreateClaimResponse data, response status code and response headers
    def create_claim_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ShippingApi.create_claim ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling ShippingApi.create_claim"
      end
      if @api_client.config.client_side_validation && opts[:'x_amzn_shipping_business_id'] && !['AmazonShipping_US', 'AmazonShipping_IN', 'AmazonShipping_UK', 'AmazonShipping_UAE', 'AmazonShipping_SA', 'AmazonShipping_EG', 'AmazonShipping_IT', 'AmazonShipping_ES', 'AmazonShipping_FR', 'AmazonShipping_JP'].include?(opts[:'x_amzn_shipping_business_id'])
        fail ArgumentError, 'invalid value for "x_amzn_shipping_business_id", must be one of AmazonShipping_US, AmazonShipping_IN, AmazonShipping_UK, AmazonShipping_UAE, AmazonShipping_SA, AmazonShipping_EG, AmazonShipping_IT, AmazonShipping_ES, AmazonShipping_FR, AmazonShipping_JP'
      end
      # resource path
      local_var_path = '/shipping/v2/claims'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'x-amzn-shipping-business-id'] = opts[:'x_amzn_shipping_business_id'] if !opts[:'x_amzn_shipping_business_id'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'CreateClaimResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ShippingApi#create_claim\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Purchases the shipping service for a shipment using the best fit service offering. Returns purchase related details and documents.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
    # @param body DirectPurchaseRequest body
    # @param [Hash] opts the optional parameters
    # @option opts [String] :x_amzn_idempotency_key A unique value which the server uses to recognize subsequent retries of the same request.
    # @option opts [String] :locale The IETF Language Tag. Note that this only supports the primary language subtag with one secondary language subtag (i.e. en-US, fr-CA). The secondary language subtag is almost always a regional designation. This does not support additional subtags beyond the primary and secondary language subtags. 
    # @option opts [String] :x_amzn_shipping_business_id Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
    # @return [DirectPurchaseResponse]
    def direct_purchase_shipment(body, opts = {})
      data, _status_code, _headers = direct_purchase_shipment_with_http_info(body, opts)
      data
    end

    # Purchases the shipping service for a shipment using the best fit service offering. Returns purchase related details and documents.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
    # @param body DirectPurchaseRequest body
    # @param [Hash] opts the optional parameters
    # @option opts [String] :x_amzn_idempotency_key A unique value which the server uses to recognize subsequent retries of the same request.
    # @option opts [String] :locale The IETF Language Tag. Note that this only supports the primary language subtag with one secondary language subtag (i.e. en-US, fr-CA). The secondary language subtag is almost always a regional designation. This does not support additional subtags beyond the primary and secondary language subtags. 
    # @option opts [String] :x_amzn_shipping_business_id Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
    # @return [Array<(DirectPurchaseResponse, Integer, Hash)>] DirectPurchaseResponse data, response status code and response headers
    def direct_purchase_shipment_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ShippingApi.direct_purchase_shipment ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling ShippingApi.direct_purchase_shipment"
      end
      if @api_client.config.client_side_validation && opts[:'x_amzn_shipping_business_id'] && !['AmazonShipping_US', 'AmazonShipping_IN', 'AmazonShipping_UK', 'AmazonShipping_UAE', 'AmazonShipping_SA', 'AmazonShipping_EG', 'AmazonShipping_IT', 'AmazonShipping_ES', 'AmazonShipping_FR', 'AmazonShipping_JP'].include?(opts[:'x_amzn_shipping_business_id'])
        fail ArgumentError, 'invalid value for "x_amzn_shipping_business_id", must be one of AmazonShipping_US, AmazonShipping_IN, AmazonShipping_UK, AmazonShipping_UAE, AmazonShipping_SA, AmazonShipping_EG, AmazonShipping_IT, AmazonShipping_ES, AmazonShipping_FR, AmazonShipping_JP'
      end
      # resource path
      local_var_path = '/shipping/v2/shipments/directPurchase'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'x-amzn-IdempotencyKey'] = opts[:'x_amzn_idempotency_key'] if !opts[:'x_amzn_idempotency_key'].nil?
      header_params[:'locale'] = opts[:'locale'] if !opts[:'locale'].nil?
      header_params[:'x-amzn-shipping-business-id'] = opts[:'x_amzn_shipping_business_id'] if !opts[:'x_amzn_shipping_business_id'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'DirectPurchaseResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ShippingApi#direct_purchase_shipment\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This API  Call to generate the collection form.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
    # @param body GenerateCollectionFormRequest body
    # @param [Hash] opts the optional parameters
    # @option opts [String] :x_amzn_idempotency_key A unique value which the server uses to recognize subsequent retries of the same request.
    # @option opts [String] :x_amzn_shipping_business_id Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
    # @return [GenerateCollectionFormResponse]
    def generate_collection_form(body, opts = {})
      data, _status_code, _headers = generate_collection_form_with_http_info(body, opts)
      data
    end

    # This API  Call to generate the collection form.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
    # @param body GenerateCollectionFormRequest body
    # @param [Hash] opts the optional parameters
    # @option opts [String] :x_amzn_idempotency_key A unique value which the server uses to recognize subsequent retries of the same request.
    # @option opts [String] :x_amzn_shipping_business_id Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
    # @return [Array<(GenerateCollectionFormResponse, Integer, Hash)>] GenerateCollectionFormResponse data, response status code and response headers
    def generate_collection_form_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ShippingApi.generate_collection_form ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling ShippingApi.generate_collection_form"
      end
      if @api_client.config.client_side_validation && opts[:'x_amzn_shipping_business_id'] && !['AmazonShipping_US', 'AmazonShipping_IN', 'AmazonShipping_UK', 'AmazonShipping_UAE', 'AmazonShipping_SA', 'AmazonShipping_EG', 'AmazonShipping_IT', 'AmazonShipping_ES', 'AmazonShipping_FR', 'AmazonShipping_JP'].include?(opts[:'x_amzn_shipping_business_id'])
        fail ArgumentError, 'invalid value for "x_amzn_shipping_business_id", must be one of AmazonShipping_US, AmazonShipping_IN, AmazonShipping_UK, AmazonShipping_UAE, AmazonShipping_SA, AmazonShipping_EG, AmazonShipping_IT, AmazonShipping_ES, AmazonShipping_FR, AmazonShipping_JP'
      end
      # resource path
      local_var_path = '/shipping/v2/collectionForms'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'x-amzn-IdempotencyKey'] = opts[:'x_amzn_idempotency_key'] if !opts[:'x_amzn_idempotency_key'].nil?
      header_params[:'x-amzn-shipping-business-id'] = opts[:'x_amzn_shipping_business_id'] if !opts[:'x_amzn_shipping_business_id'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'GenerateCollectionFormResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ShippingApi#generate_collection_form\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Returns a list of access points in proximity of input postal code.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
    # @param access_point_types Access point types
    # @param country_code Country code for access point
    # @param postal_code postal code for access point
    # @param [Hash] opts the optional parameters
    # @option opts [String] :x_amzn_shipping_business_id Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
    # @return [GetAccessPointsResponse]
    def get_access_points(access_point_types, country_code, postal_code, opts = {})
      data, _status_code, _headers = get_access_points_with_http_info(access_point_types, country_code, postal_code, opts)
      data
    end

    # Returns a list of access points in proximity of input postal code.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
    # @param access_point_types Access point types
    # @param country_code Country code for access point
    # @param postal_code postal code for access point
    # @param [Hash] opts the optional parameters
    # @option opts [String] :x_amzn_shipping_business_id Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
    # @return [Array<(GetAccessPointsResponse, Integer, Hash)>] GetAccessPointsResponse data, response status code and response headers
    def get_access_points_with_http_info(access_point_types, country_code, postal_code, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ShippingApi.get_access_points ...'
      end
      # verify the required parameter 'access_point_types' is set
      if @api_client.config.client_side_validation && access_point_types.nil?
        fail ArgumentError, "Missing the required parameter 'access_point_types' when calling ShippingApi.get_access_points"
      end
      # verify the required parameter 'country_code' is set
      if @api_client.config.client_side_validation && country_code.nil?
        fail ArgumentError, "Missing the required parameter 'country_code' when calling ShippingApi.get_access_points"
      end
      # verify the required parameter 'postal_code' is set
      if @api_client.config.client_side_validation && postal_code.nil?
        fail ArgumentError, "Missing the required parameter 'postal_code' when calling ShippingApi.get_access_points"
      end
      if @api_client.config.client_side_validation && opts[:'x_amzn_shipping_business_id'] && !['AmazonShipping_US', 'AmazonShipping_IN', 'AmazonShipping_UK', 'AmazonShipping_UAE', 'AmazonShipping_SA', 'AmazonShipping_EG', 'AmazonShipping_IT', 'AmazonShipping_ES', 'AmazonShipping_FR', 'AmazonShipping_JP'].include?(opts[:'x_amzn_shipping_business_id'])
        fail ArgumentError, 'invalid value for "x_amzn_shipping_business_id", must be one of AmazonShipping_US, AmazonShipping_IN, AmazonShipping_UK, AmazonShipping_UAE, AmazonShipping_SA, AmazonShipping_EG, AmazonShipping_IT, AmazonShipping_ES, AmazonShipping_FR, AmazonShipping_JP'
      end
      # resource path
      local_var_path = '/shipping/v2/accessPoints'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'accessPointTypes'] = @api_client.build_collection_param(access_point_types, :csv)
      query_params[:'countryCode'] = country_code
      query_params[:'postalCode'] = postal_code

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'x-amzn-shipping-business-id'] = opts[:'x_amzn_shipping_business_id'] if !opts[:'x_amzn_shipping_business_id'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] || 'GetAccessPointsResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ShippingApi#get_access_points\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Returns the JSON schema to use for providing additional inputs when needed to purchase a shipping offering. Call the getAdditionalInputs operation when the response to a previous call to the getRates operation indicates that additional inputs are required for the rate (shipping offering) that you want to purchase.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
    # @param request_token The request token returned in the response to the getRates operation.
    # @param rate_id The rate identifier for the shipping offering (rate) returned in the response to the getRates operation.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :x_amzn_shipping_business_id Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
    # @return [GetAdditionalInputsResponse]
    def get_additional_inputs(request_token, rate_id, opts = {})
      data, _status_code, _headers = get_additional_inputs_with_http_info(request_token, rate_id, opts)
      data
    end

    # Returns the JSON schema to use for providing additional inputs when needed to purchase a shipping offering. Call the getAdditionalInputs operation when the response to a previous call to the getRates operation indicates that additional inputs are required for the rate (shipping offering) that you want to purchase.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
    # @param request_token The request token returned in the response to the getRates operation.
    # @param rate_id The rate identifier for the shipping offering (rate) returned in the response to the getRates operation.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :x_amzn_shipping_business_id Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
    # @return [Array<(GetAdditionalInputsResponse, Integer, Hash)>] GetAdditionalInputsResponse data, response status code and response headers
    def get_additional_inputs_with_http_info(request_token, rate_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ShippingApi.get_additional_inputs ...'
      end
      # verify the required parameter 'request_token' is set
      if @api_client.config.client_side_validation && request_token.nil?
        fail ArgumentError, "Missing the required parameter 'request_token' when calling ShippingApi.get_additional_inputs"
      end
      # verify the required parameter 'rate_id' is set
      if @api_client.config.client_side_validation && rate_id.nil?
        fail ArgumentError, "Missing the required parameter 'rate_id' when calling ShippingApi.get_additional_inputs"
      end
      if @api_client.config.client_side_validation && opts[:'x_amzn_shipping_business_id'] && !['AmazonShipping_US', 'AmazonShipping_IN', 'AmazonShipping_UK', 'AmazonShipping_UAE', 'AmazonShipping_SA', 'AmazonShipping_EG', 'AmazonShipping_IT', 'AmazonShipping_ES', 'AmazonShipping_FR', 'AmazonShipping_JP'].include?(opts[:'x_amzn_shipping_business_id'])
        fail ArgumentError, 'invalid value for "x_amzn_shipping_business_id", must be one of AmazonShipping_US, AmazonShipping_IN, AmazonShipping_UK, AmazonShipping_UAE, AmazonShipping_SA, AmazonShipping_EG, AmazonShipping_IT, AmazonShipping_ES, AmazonShipping_FR, AmazonShipping_JP'
      end
      # resource path
      local_var_path = '/shipping/v2/shipments/additionalInputs/schema'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'requestToken'] = request_token
      query_params[:'rateId'] = rate_id

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'x-amzn-shipping-business-id'] = opts[:'x_amzn_shipping_business_id'] if !opts[:'x_amzn_shipping_business_id'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] || 'GetAdditionalInputsResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ShippingApi#get_additional_inputs\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This API will return a list of input schema required to register a shipper account with the carrier.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
    # @param [Hash] opts the optional parameters
    # @option opts [String] :x_amzn_shipping_business_id Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
    # @return [GetCarrierAccountFormInputsResponse]
    def get_carrier_account_form_inputs(opts = {})
      data, _status_code, _headers = get_carrier_account_form_inputs_with_http_info(opts)
      data
    end

    # This API will return a list of input schema required to register a shipper account with the carrier.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
    # @param [Hash] opts the optional parameters
    # @option opts [String] :x_amzn_shipping_business_id Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
    # @return [Array<(GetCarrierAccountFormInputsResponse, Integer, Hash)>] GetCarrierAccountFormInputsResponse data, response status code and response headers
    def get_carrier_account_form_inputs_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ShippingApi.get_carrier_account_form_inputs ...'
      end
      if @api_client.config.client_side_validation && opts[:'x_amzn_shipping_business_id'] && !['AmazonShipping_US', 'AmazonShipping_IN', 'AmazonShipping_UK', 'AmazonShipping_UAE', 'AmazonShipping_SA', 'AmazonShipping_EG', 'AmazonShipping_IT', 'AmazonShipping_ES', 'AmazonShipping_FR', 'AmazonShipping_JP'].include?(opts[:'x_amzn_shipping_business_id'])
        fail ArgumentError, 'invalid value for "x_amzn_shipping_business_id", must be one of AmazonShipping_US, AmazonShipping_IN, AmazonShipping_UK, AmazonShipping_UAE, AmazonShipping_SA, AmazonShipping_EG, AmazonShipping_IT, AmazonShipping_ES, AmazonShipping_FR, AmazonShipping_JP'
      end
      # resource path
      local_var_path = '/shipping/v2/carrierAccountFormInputs'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'x-amzn-shipping-business-id'] = opts[:'x_amzn_shipping_business_id'] if !opts[:'x_amzn_shipping_business_id'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] || 'GetCarrierAccountFormInputsResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ShippingApi#get_carrier_account_form_inputs\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This API will return Get all carrier accounts for a merchant.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
    # @param body GetCarrierAccountsRequest body
    # @param [Hash] opts the optional parameters
    # @option opts [String] :x_amzn_shipping_business_id Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
    # @return [GetCarrierAccountsResponse]
    def get_carrier_accounts(body, opts = {})
      data, _status_code, _headers = get_carrier_accounts_with_http_info(body, opts)
      data
    end

    # This API will return Get all carrier accounts for a merchant.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
    # @param body GetCarrierAccountsRequest body
    # @param [Hash] opts the optional parameters
    # @option opts [String] :x_amzn_shipping_business_id Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
    # @return [Array<(GetCarrierAccountsResponse, Integer, Hash)>] GetCarrierAccountsResponse data, response status code and response headers
    def get_carrier_accounts_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ShippingApi.get_carrier_accounts ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling ShippingApi.get_carrier_accounts"
      end
      if @api_client.config.client_side_validation && opts[:'x_amzn_shipping_business_id'] && !['AmazonShipping_US', 'AmazonShipping_IN', 'AmazonShipping_UK', 'AmazonShipping_UAE', 'AmazonShipping_SA', 'AmazonShipping_EG', 'AmazonShipping_IT', 'AmazonShipping_ES', 'AmazonShipping_FR', 'AmazonShipping_JP'].include?(opts[:'x_amzn_shipping_business_id'])
        fail ArgumentError, 'invalid value for "x_amzn_shipping_business_id", must be one of AmazonShipping_US, AmazonShipping_IN, AmazonShipping_UK, AmazonShipping_UAE, AmazonShipping_SA, AmazonShipping_EG, AmazonShipping_IT, AmazonShipping_ES, AmazonShipping_FR, AmazonShipping_JP'
      end
      # resource path
      local_var_path = '/shipping/v2/carrierAccounts'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'x-amzn-shipping-business-id'] = opts[:'x_amzn_shipping_business_id'] if !opts[:'x_amzn_shipping_business_id'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'GetCarrierAccountsResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ShippingApi#get_carrier_accounts\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This API reprint a collection form.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
    # @param collection_form_id collection form Id to reprint a collection.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :x_amzn_shipping_business_id Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
    # @return [GetCollectionFormResponse]
    def get_collection_form(collection_form_id, opts = {})
      data, _status_code, _headers = get_collection_form_with_http_info(collection_form_id, opts)
      data
    end

    # This API reprint a collection form.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
    # @param collection_form_id collection form Id to reprint a collection.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :x_amzn_shipping_business_id Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
    # @return [Array<(GetCollectionFormResponse, Integer, Hash)>] GetCollectionFormResponse data, response status code and response headers
    def get_collection_form_with_http_info(collection_form_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ShippingApi.get_collection_form ...'
      end
      # verify the required parameter 'collection_form_id' is set
      if @api_client.config.client_side_validation && collection_form_id.nil?
        fail ArgumentError, "Missing the required parameter 'collection_form_id' when calling ShippingApi.get_collection_form"
      end
      if @api_client.config.client_side_validation && opts[:'x_amzn_shipping_business_id'] && !['AmazonShipping_US', 'AmazonShipping_IN', 'AmazonShipping_UK', 'AmazonShipping_UAE', 'AmazonShipping_SA', 'AmazonShipping_EG', 'AmazonShipping_IT', 'AmazonShipping_ES', 'AmazonShipping_FR', 'AmazonShipping_JP'].include?(opts[:'x_amzn_shipping_business_id'])
        fail ArgumentError, 'invalid value for "x_amzn_shipping_business_id", must be one of AmazonShipping_US, AmazonShipping_IN, AmazonShipping_UK, AmazonShipping_UAE, AmazonShipping_SA, AmazonShipping_EG, AmazonShipping_IT, AmazonShipping_ES, AmazonShipping_FR, AmazonShipping_JP'
      end
      # resource path
      local_var_path = '/shipping/v2/collectionForms/{collectionFormId}'.sub('{' + 'collectionFormId' + '}', collection_form_id.to_s)

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'x-amzn-shipping-business-id'] = opts[:'x_amzn_shipping_business_id'] if !opts[:'x_amzn_shipping_business_id'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] || 'GetCollectionFormResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ShippingApi#get_collection_form\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This API Call to get the history of the previously generated collection forms.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
    # @param body GetCollectionFormHistoryRequest body
    # @param [Hash] opts the optional parameters
    # @option opts [String] :x_amzn_shipping_business_id Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
    # @return [GetCollectionFormHistoryResponse]
    def get_collection_form_history(body, opts = {})
      data, _status_code, _headers = get_collection_form_history_with_http_info(body, opts)
      data
    end

    # This API Call to get the history of the previously generated collection forms.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
    # @param body GetCollectionFormHistoryRequest body
    # @param [Hash] opts the optional parameters
    # @option opts [String] :x_amzn_shipping_business_id Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
    # @return [Array<(GetCollectionFormHistoryResponse, Integer, Hash)>] GetCollectionFormHistoryResponse data, response status code and response headers
    def get_collection_form_history_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ShippingApi.get_collection_form_history ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling ShippingApi.get_collection_form_history"
      end
      if @api_client.config.client_side_validation && opts[:'x_amzn_shipping_business_id'] && !['AmazonShipping_US', 'AmazonShipping_IN', 'AmazonShipping_UK', 'AmazonShipping_UAE', 'AmazonShipping_SA', 'AmazonShipping_EG', 'AmazonShipping_IT', 'AmazonShipping_ES', 'AmazonShipping_FR', 'AmazonShipping_JP'].include?(opts[:'x_amzn_shipping_business_id'])
        fail ArgumentError, 'invalid value for "x_amzn_shipping_business_id", must be one of AmazonShipping_US, AmazonShipping_IN, AmazonShipping_UK, AmazonShipping_UAE, AmazonShipping_SA, AmazonShipping_EG, AmazonShipping_IT, AmazonShipping_ES, AmazonShipping_FR, AmazonShipping_JP'
      end
      # resource path
      local_var_path = '/shipping/v2/collectionForms/history'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'x-amzn-shipping-business-id'] = opts[:'x_amzn_shipping_business_id'] if !opts[:'x_amzn_shipping_business_id'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'GetCollectionFormHistoryResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ShippingApi#get_collection_form_history\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Returns the available shipping service offerings.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
    # @param body GetRatesRequest body
    # @param [Hash] opts the optional parameters
    # @option opts [String] :x_amzn_shipping_business_id Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
    # @return [GetRatesResponse]
    def get_rates(body, opts = {})
      data, _status_code, _headers = get_rates_with_http_info(body, opts)
      data
    end

    # Returns the available shipping service offerings.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
    # @param body GetRatesRequest body
    # @param [Hash] opts the optional parameters
    # @option opts [String] :x_amzn_shipping_business_id Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
    # @return [Array<(GetRatesResponse, Integer, Hash)>] GetRatesResponse data, response status code and response headers
    def get_rates_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ShippingApi.get_rates ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling ShippingApi.get_rates"
      end
      if @api_client.config.client_side_validation && opts[:'x_amzn_shipping_business_id'] && !['AmazonShipping_US', 'AmazonShipping_IN', 'AmazonShipping_UK', 'AmazonShipping_UAE', 'AmazonShipping_SA', 'AmazonShipping_EG', 'AmazonShipping_IT', 'AmazonShipping_ES', 'AmazonShipping_FR', 'AmazonShipping_JP'].include?(opts[:'x_amzn_shipping_business_id'])
        fail ArgumentError, 'invalid value for "x_amzn_shipping_business_id", must be one of AmazonShipping_US, AmazonShipping_IN, AmazonShipping_UK, AmazonShipping_UAE, AmazonShipping_SA, AmazonShipping_EG, AmazonShipping_IT, AmazonShipping_ES, AmazonShipping_FR, AmazonShipping_JP'
      end
      # resource path
      local_var_path = '/shipping/v2/shipments/rates'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'x-amzn-shipping-business-id'] = opts[:'x_amzn_shipping_business_id'] if !opts[:'x_amzn_shipping_business_id'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'GetRatesResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ShippingApi#get_rates\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Returns the shipping documents associated with a package in a shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
    # @param shipment_id The shipment identifier originally returned by the purchaseShipment operation.
    # @param package_client_reference_id The package client reference identifier originally provided in the request body parameter for the getRates operation.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :format The file format of the document. Must be one of the supported formats returned by the getRates operation.
    # @option opts [BigDecimal] :dpi The resolution of the document (for example, 300 means 300 dots per inch). Must be one of the supported resolutions returned in the response to the getRates operation.
    # @option opts [String] :x_amzn_shipping_business_id Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
    # @return [GetShipmentDocumentsResponse]
    def get_shipment_documents(shipment_id, package_client_reference_id, opts = {})
      data, _status_code, _headers = get_shipment_documents_with_http_info(shipment_id, package_client_reference_id, opts)
      data
    end

    # Returns the shipping documents associated with a package in a shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
    # @param shipment_id The shipment identifier originally returned by the purchaseShipment operation.
    # @param package_client_reference_id The package client reference identifier originally provided in the request body parameter for the getRates operation.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :format The file format of the document. Must be one of the supported formats returned by the getRates operation.
    # @option opts [BigDecimal] :dpi The resolution of the document (for example, 300 means 300 dots per inch). Must be one of the supported resolutions returned in the response to the getRates operation.
    # @option opts [String] :x_amzn_shipping_business_id Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
    # @return [Array<(GetShipmentDocumentsResponse, Integer, Hash)>] GetShipmentDocumentsResponse data, response status code and response headers
    def get_shipment_documents_with_http_info(shipment_id, package_client_reference_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ShippingApi.get_shipment_documents ...'
      end
      # verify the required parameter 'shipment_id' is set
      if @api_client.config.client_side_validation && shipment_id.nil?
        fail ArgumentError, "Missing the required parameter 'shipment_id' when calling ShippingApi.get_shipment_documents"
      end
      # verify the required parameter 'package_client_reference_id' is set
      if @api_client.config.client_side_validation && package_client_reference_id.nil?
        fail ArgumentError, "Missing the required parameter 'package_client_reference_id' when calling ShippingApi.get_shipment_documents"
      end
      if @api_client.config.client_side_validation && opts[:'x_amzn_shipping_business_id'] && !['AmazonShipping_US', 'AmazonShipping_IN', 'AmazonShipping_UK', 'AmazonShipping_UAE', 'AmazonShipping_SA', 'AmazonShipping_EG', 'AmazonShipping_IT', 'AmazonShipping_ES', 'AmazonShipping_FR', 'AmazonShipping_JP'].include?(opts[:'x_amzn_shipping_business_id'])
        fail ArgumentError, 'invalid value for "x_amzn_shipping_business_id", must be one of AmazonShipping_US, AmazonShipping_IN, AmazonShipping_UK, AmazonShipping_UAE, AmazonShipping_SA, AmazonShipping_EG, AmazonShipping_IT, AmazonShipping_ES, AmazonShipping_FR, AmazonShipping_JP'
      end
      # resource path
      local_var_path = '/shipping/v2/shipments/{shipmentId}/documents'.sub('{' + 'shipmentId' + '}', shipment_id.to_s)

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'packageClientReferenceId'] = package_client_reference_id
      query_params[:'format'] = opts[:'format'] if !opts[:'format'].nil?
      query_params[:'dpi'] = opts[:'dpi'] if !opts[:'dpi'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'x-amzn-shipping-business-id'] = opts[:'x_amzn_shipping_business_id'] if !opts[:'x_amzn_shipping_business_id'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] || 'GetShipmentDocumentsResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ShippingApi#get_shipment_documents\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Returns tracking information for a purchased shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
    # @param tracking_id A carrier-generated tracking identifier originally returned by the purchaseShipment operation.
    # @param carrier_id A carrier identifier originally returned by the getRates operation for the selected rate.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :x_amzn_shipping_business_id Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
    # @return [GetTrackingResponse]
    def get_tracking(tracking_id, carrier_id, opts = {})
      data, _status_code, _headers = get_tracking_with_http_info(tracking_id, carrier_id, opts)
      data
    end

    # Returns tracking information for a purchased shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
    # @param tracking_id A carrier-generated tracking identifier originally returned by the purchaseShipment operation.
    # @param carrier_id A carrier identifier originally returned by the getRates operation for the selected rate.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :x_amzn_shipping_business_id Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
    # @return [Array<(GetTrackingResponse, Integer, Hash)>] GetTrackingResponse data, response status code and response headers
    def get_tracking_with_http_info(tracking_id, carrier_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ShippingApi.get_tracking ...'
      end
      # verify the required parameter 'tracking_id' is set
      if @api_client.config.client_side_validation && tracking_id.nil?
        fail ArgumentError, "Missing the required parameter 'tracking_id' when calling ShippingApi.get_tracking"
      end
      # verify the required parameter 'carrier_id' is set
      if @api_client.config.client_side_validation && carrier_id.nil?
        fail ArgumentError, "Missing the required parameter 'carrier_id' when calling ShippingApi.get_tracking"
      end
      if @api_client.config.client_side_validation && opts[:'x_amzn_shipping_business_id'] && !['AmazonShipping_US', 'AmazonShipping_IN', 'AmazonShipping_UK', 'AmazonShipping_UAE', 'AmazonShipping_SA', 'AmazonShipping_EG', 'AmazonShipping_IT', 'AmazonShipping_ES', 'AmazonShipping_FR', 'AmazonShipping_JP'].include?(opts[:'x_amzn_shipping_business_id'])
        fail ArgumentError, 'invalid value for "x_amzn_shipping_business_id", must be one of AmazonShipping_US, AmazonShipping_IN, AmazonShipping_UK, AmazonShipping_UAE, AmazonShipping_SA, AmazonShipping_EG, AmazonShipping_IT, AmazonShipping_ES, AmazonShipping_FR, AmazonShipping_JP'
      end
      # resource path
      local_var_path = '/shipping/v2/tracking'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'trackingId'] = tracking_id
      query_params[:'carrierId'] = carrier_id

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'x-amzn-shipping-business-id'] = opts[:'x_amzn_shipping_business_id'] if !opts[:'x_amzn_shipping_business_id'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] || 'GetTrackingResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ShippingApi#get_tracking\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This API Get all unmanifested carriers with shipment locations. Any locations which has unmanifested shipments         with an eligible carrier for manifesting shall be returned.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
    # @param body GetUmanifestedShipmentsRequest body
    # @param [Hash] opts the optional parameters
    # @option opts [String] :x_amzn_shipping_business_id Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
    # @return [GetUnmanifestedShipmentsResponse]
    def get_unmanifested_shipments(body, opts = {})
      data, _status_code, _headers = get_unmanifested_shipments_with_http_info(body, opts)
      data
    end

    # This API Get all unmanifested carriers with shipment locations. Any locations which has unmanifested shipments         with an eligible carrier for manifesting shall be returned.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
    # @param body GetUmanifestedShipmentsRequest body
    # @param [Hash] opts the optional parameters
    # @option opts [String] :x_amzn_shipping_business_id Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
    # @return [Array<(GetUnmanifestedShipmentsResponse, Integer, Hash)>] GetUnmanifestedShipmentsResponse data, response status code and response headers
    def get_unmanifested_shipments_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ShippingApi.get_unmanifested_shipments ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling ShippingApi.get_unmanifested_shipments"
      end
      if @api_client.config.client_side_validation && opts[:'x_amzn_shipping_business_id'] && !['AmazonShipping_US', 'AmazonShipping_IN', 'AmazonShipping_UK', 'AmazonShipping_UAE', 'AmazonShipping_SA', 'AmazonShipping_EG', 'AmazonShipping_IT', 'AmazonShipping_ES', 'AmazonShipping_FR', 'AmazonShipping_JP'].include?(opts[:'x_amzn_shipping_business_id'])
        fail ArgumentError, 'invalid value for "x_amzn_shipping_business_id", must be one of AmazonShipping_US, AmazonShipping_IN, AmazonShipping_UK, AmazonShipping_UAE, AmazonShipping_SA, AmazonShipping_EG, AmazonShipping_IT, AmazonShipping_ES, AmazonShipping_FR, AmazonShipping_JP'
      end
      # resource path
      local_var_path = '/shipping/v2/unmanifestedShipments'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'x-amzn-shipping-business-id'] = opts[:'x_amzn_shipping_business_id'] if !opts[:'x_amzn_shipping_business_id'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'GetUnmanifestedShipmentsResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ShippingApi#get_unmanifested_shipments\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This API associates/links the specified carrier account with the merchant.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
    # @param body LinkCarrierAccountRequest body
    # @param carrier_id An identifier for the carrier with which the seller&#x27;s account is being linked.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :x_amzn_shipping_business_id Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
    # @return [LinkCarrierAccountResponse]
    def link_carrier_account(body, carrier_id, opts = {})
      data, _status_code, _headers = link_carrier_account_with_http_info(body, carrier_id, opts)
      data
    end

    # This API associates/links the specified carrier account with the merchant.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
    # @param body LinkCarrierAccountRequest body
    # @param carrier_id An identifier for the carrier with which the seller&#x27;s account is being linked.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :x_amzn_shipping_business_id Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
    # @return [Array<(LinkCarrierAccountResponse, Integer, Hash)>] LinkCarrierAccountResponse data, response status code and response headers
    def link_carrier_account_with_http_info(body, carrier_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ShippingApi.link_carrier_account ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling ShippingApi.link_carrier_account"
      end
      # verify the required parameter 'carrier_id' is set
      if @api_client.config.client_side_validation && carrier_id.nil?
        fail ArgumentError, "Missing the required parameter 'carrier_id' when calling ShippingApi.link_carrier_account"
      end
      if @api_client.config.client_side_validation && opts[:'x_amzn_shipping_business_id'] && !['AmazonShipping_US', 'AmazonShipping_IN', 'AmazonShipping_UK', 'AmazonShipping_UAE', 'AmazonShipping_SA', 'AmazonShipping_EG', 'AmazonShipping_IT', 'AmazonShipping_ES', 'AmazonShipping_FR', 'AmazonShipping_JP'].include?(opts[:'x_amzn_shipping_business_id'])
        fail ArgumentError, 'invalid value for "x_amzn_shipping_business_id", must be one of AmazonShipping_US, AmazonShipping_IN, AmazonShipping_UK, AmazonShipping_UAE, AmazonShipping_SA, AmazonShipping_EG, AmazonShipping_IT, AmazonShipping_ES, AmazonShipping_FR, AmazonShipping_JP'
      end
      # resource path
      local_var_path = '/shipping/v2/carrierAccounts/{carrierId}'.sub('{' + 'carrierId' + '}', carrier_id.to_s)

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'x-amzn-shipping-business-id'] = opts[:'x_amzn_shipping_business_id'] if !opts[:'x_amzn_shipping_business_id'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'LinkCarrierAccountResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ShippingApi#link_carrier_account\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This API associates/links the specified carrier account with the merchant.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 5 | 10 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
    # @param body LinkCarrierAccountRequest body
    # @param carrier_id An identifier for the carrier with which the seller&#x27;s account is being linked.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :x_amzn_shipping_business_id Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
    # @return [LinkCarrierAccountResponse]
    def link_carrier_account_0(body, carrier_id, opts = {})
      data, _status_code, _headers = link_carrier_account_0_with_http_info(body, carrier_id, opts)
      data
    end

    # This API associates/links the specified carrier account with the merchant.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 5 | 10 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
    # @param body LinkCarrierAccountRequest body
    # @param carrier_id An identifier for the carrier with which the seller&#x27;s account is being linked.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :x_amzn_shipping_business_id Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
    # @return [Array<(LinkCarrierAccountResponse, Integer, Hash)>] LinkCarrierAccountResponse data, response status code and response headers
    def link_carrier_account_0_with_http_info(body, carrier_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ShippingApi.link_carrier_account_0 ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling ShippingApi.link_carrier_account_0"
      end
      # verify the required parameter 'carrier_id' is set
      if @api_client.config.client_side_validation && carrier_id.nil?
        fail ArgumentError, "Missing the required parameter 'carrier_id' when calling ShippingApi.link_carrier_account_0"
      end
      if @api_client.config.client_side_validation && opts[:'x_amzn_shipping_business_id'] && !['AmazonShipping_US', 'AmazonShipping_IN', 'AmazonShipping_UK', 'AmazonShipping_UAE', 'AmazonShipping_SA', 'AmazonShipping_EG', 'AmazonShipping_IT', 'AmazonShipping_ES', 'AmazonShipping_FR', 'AmazonShipping_JP'].include?(opts[:'x_amzn_shipping_business_id'])
        fail ArgumentError, 'invalid value for "x_amzn_shipping_business_id", must be one of AmazonShipping_US, AmazonShipping_IN, AmazonShipping_UK, AmazonShipping_UAE, AmazonShipping_SA, AmazonShipping_EG, AmazonShipping_IT, AmazonShipping_ES, AmazonShipping_FR, AmazonShipping_JP'
      end
      # resource path
      local_var_path = '/shipping/v2/carrierAccounts/{carrierId}'.sub('{' + 'carrierId' + '}', carrier_id.to_s)

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'x-amzn-shipping-business-id'] = opts[:'x_amzn_shipping_business_id'] if !opts[:'x_amzn_shipping_business_id'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'LinkCarrierAccountResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ShippingApi#link_carrier_account_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Purchases a shipping service identifier and returns purchase-related details and documents.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
    # @param body OneClickShipmentRequest body
    # @param [Hash] opts the optional parameters
    # @option opts [String] :x_amzn_shipping_business_id Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
    # @return [OneClickShipmentResponse]
    def one_click_shipment(body, opts = {})
      data, _status_code, _headers = one_click_shipment_with_http_info(body, opts)
      data
    end

    # Purchases a shipping service identifier and returns purchase-related details and documents.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
    # @param body OneClickShipmentRequest body
    # @param [Hash] opts the optional parameters
    # @option opts [String] :x_amzn_shipping_business_id Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
    # @return [Array<(OneClickShipmentResponse, Integer, Hash)>] OneClickShipmentResponse data, response status code and response headers
    def one_click_shipment_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ShippingApi.one_click_shipment ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling ShippingApi.one_click_shipment"
      end
      if @api_client.config.client_side_validation && opts[:'x_amzn_shipping_business_id'] && !['AmazonShipping_US', 'AmazonShipping_IN', 'AmazonShipping_UK', 'AmazonShipping_UAE', 'AmazonShipping_SA', 'AmazonShipping_EG', 'AmazonShipping_IT', 'AmazonShipping_ES', 'AmazonShipping_FR', 'AmazonShipping_JP'].include?(opts[:'x_amzn_shipping_business_id'])
        fail ArgumentError, 'invalid value for "x_amzn_shipping_business_id", must be one of AmazonShipping_US, AmazonShipping_IN, AmazonShipping_UK, AmazonShipping_UAE, AmazonShipping_SA, AmazonShipping_EG, AmazonShipping_IT, AmazonShipping_ES, AmazonShipping_FR, AmazonShipping_JP'
      end
      # resource path
      local_var_path = '/shipping/v2/oneClickShipment'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'x-amzn-shipping-business-id'] = opts[:'x_amzn_shipping_business_id'] if !opts[:'x_amzn_shipping_business_id'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'OneClickShipmentResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ShippingApi#one_click_shipment\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Purchases a shipping service and returns purchase related details and documents.  Note: You must complete the purchase within 10 minutes of rate creation by the shipping service provider. If you make the request after the 10 minutes have expired, you will receive an error response with the error code equal to \"TOKEN_EXPIRED\". If you receive this error response, you must get the rates for the shipment again.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
    # @param body PurchaseShipmentRequest body
    # @param [Hash] opts the optional parameters
    # @option opts [String] :x_amzn_idempotency_key A unique value which the server uses to recognize subsequent retries of the same request.
    # @option opts [String] :x_amzn_shipping_business_id Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
    # @return [PurchaseShipmentResponse]
    def purchase_shipment(body, opts = {})
      data, _status_code, _headers = purchase_shipment_with_http_info(body, opts)
      data
    end

    # Purchases a shipping service and returns purchase related details and documents.  Note: You must complete the purchase within 10 minutes of rate creation by the shipping service provider. If you make the request after the 10 minutes have expired, you will receive an error response with the error code equal to \&quot;TOKEN_EXPIRED\&quot;. If you receive this error response, you must get the rates for the shipment again.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
    # @param body PurchaseShipmentRequest body
    # @param [Hash] opts the optional parameters
    # @option opts [String] :x_amzn_idempotency_key A unique value which the server uses to recognize subsequent retries of the same request.
    # @option opts [String] :x_amzn_shipping_business_id Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
    # @return [Array<(PurchaseShipmentResponse, Integer, Hash)>] PurchaseShipmentResponse data, response status code and response headers
    def purchase_shipment_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ShippingApi.purchase_shipment ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling ShippingApi.purchase_shipment"
      end
      if @api_client.config.client_side_validation && opts[:'x_amzn_shipping_business_id'] && !['AmazonShipping_US', 'AmazonShipping_IN', 'AmazonShipping_UK', 'AmazonShipping_UAE', 'AmazonShipping_SA', 'AmazonShipping_EG', 'AmazonShipping_IT', 'AmazonShipping_ES', 'AmazonShipping_FR', 'AmazonShipping_JP'].include?(opts[:'x_amzn_shipping_business_id'])
        fail ArgumentError, 'invalid value for "x_amzn_shipping_business_id", must be one of AmazonShipping_US, AmazonShipping_IN, AmazonShipping_UK, AmazonShipping_UAE, AmazonShipping_SA, AmazonShipping_EG, AmazonShipping_IT, AmazonShipping_ES, AmazonShipping_FR, AmazonShipping_JP'
      end
      # resource path
      local_var_path = '/shipping/v2/shipments'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'x-amzn-IdempotencyKey'] = opts[:'x_amzn_idempotency_key'] if !opts[:'x_amzn_idempotency_key'].nil?
      header_params[:'x-amzn-shipping-business-id'] = opts[:'x_amzn_shipping_business_id'] if !opts[:'x_amzn_shipping_business_id'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'PurchaseShipmentResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ShippingApi#purchase_shipment\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This API submits the NDR (Non-delivery Report) Feedback for any eligible shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
    # @param body Request body for ndrFeedback operation
    # @param [Hash] opts the optional parameters
    # @option opts [String] :x_amzn_shipping_business_id Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
    # @return [nil]
    def submit_ndr_feedback(body, opts = {})
      submit_ndr_feedback_with_http_info(body, opts)
      nil
    end

    # This API submits the NDR (Non-delivery Report) Feedback for any eligible shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
    # @param body Request body for ndrFeedback operation
    # @param [Hash] opts the optional parameters
    # @option opts [String] :x_amzn_shipping_business_id Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def submit_ndr_feedback_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ShippingApi.submit_ndr_feedback ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling ShippingApi.submit_ndr_feedback"
      end
      if @api_client.config.client_side_validation && opts[:'x_amzn_shipping_business_id'] && !['AmazonShipping_US', 'AmazonShipping_IN', 'AmazonShipping_UK', 'AmazonShipping_UAE', 'AmazonShipping_SA', 'AmazonShipping_EG', 'AmazonShipping_IT', 'AmazonShipping_ES', 'AmazonShipping_FR', 'AmazonShipping_JP'].include?(opts[:'x_amzn_shipping_business_id'])
        fail ArgumentError, 'invalid value for "x_amzn_shipping_business_id", must be one of AmazonShipping_US, AmazonShipping_IN, AmazonShipping_UK, AmazonShipping_UAE, AmazonShipping_SA, AmazonShipping_EG, AmazonShipping_IT, AmazonShipping_ES, AmazonShipping_FR, AmazonShipping_JP'
      end
      # resource path
      local_var_path = '/shipping/v2/ndrFeedback'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'x-amzn-shipping-business-id'] = opts[:'x_amzn_shipping_business_id'] if !opts[:'x_amzn_shipping_business_id'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ShippingApi#submit_ndr_feedback\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This API Unlink the specified carrier account with the merchant.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
    # @param body UnlinkCarrierAccountRequest body
    # @param carrier_id carrier Id to unlink with merchant.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :x_amzn_shipping_business_id Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
    # @return [UnlinkCarrierAccountResponse]
    def unlink_carrier_account(body, carrier_id, opts = {})
      data, _status_code, _headers = unlink_carrier_account_with_http_info(body, carrier_id, opts)
      data
    end

    # This API Unlink the specified carrier account with the merchant.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
    # @param body UnlinkCarrierAccountRequest body
    # @param carrier_id carrier Id to unlink with merchant.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :x_amzn_shipping_business_id Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
    # @return [Array<(UnlinkCarrierAccountResponse, Integer, Hash)>] UnlinkCarrierAccountResponse data, response status code and response headers
    def unlink_carrier_account_with_http_info(body, carrier_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ShippingApi.unlink_carrier_account ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling ShippingApi.unlink_carrier_account"
      end
      # verify the required parameter 'carrier_id' is set
      if @api_client.config.client_side_validation && carrier_id.nil?
        fail ArgumentError, "Missing the required parameter 'carrier_id' when calling ShippingApi.unlink_carrier_account"
      end
      if @api_client.config.client_side_validation && opts[:'x_amzn_shipping_business_id'] && !['AmazonShipping_US', 'AmazonShipping_IN', 'AmazonShipping_UK', 'AmazonShipping_UAE', 'AmazonShipping_SA', 'AmazonShipping_EG', 'AmazonShipping_IT', 'AmazonShipping_ES', 'AmazonShipping_FR', 'AmazonShipping_JP'].include?(opts[:'x_amzn_shipping_business_id'])
        fail ArgumentError, 'invalid value for "x_amzn_shipping_business_id", must be one of AmazonShipping_US, AmazonShipping_IN, AmazonShipping_UK, AmazonShipping_UAE, AmazonShipping_SA, AmazonShipping_EG, AmazonShipping_IT, AmazonShipping_ES, AmazonShipping_FR, AmazonShipping_JP'
      end
      # resource path
      local_var_path = '/shipping/v2/carrierAccounts/{carrierId}/unlink'.sub('{' + 'carrierId' + '}', carrier_id.to_s)

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'x-amzn-shipping-business-id'] = opts[:'x_amzn_shipping_business_id'] if !opts[:'x_amzn_shipping_business_id'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'UnlinkCarrierAccountResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ShippingApi#unlink_carrier_account\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
