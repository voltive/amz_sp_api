=begin
#Amazon Shipping API

#The Amazon Shipping API is designed to support outbound shipping use cases both for orders originating on Amazon-owned marketplaces as well as external channels/marketplaces. With these APIs, you can request shipping rates, create shipments, cancel shipments, and track shipments.

OpenAPI spec version: v2
Contact: swa-api-core@amazon.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.68
=end

require 'spec_helper'
require 'json'

# Unit tests for AmzSpApi::ShippingApiModel::ShippingApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'ShippingApi' do
  before do
    # run before each test
    @instance = AmzSpApi::ShippingApiModel::ShippingApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ShippingApi' do
    it 'should create an instance of ShippingApi' do
      expect(@instance).to be_instance_of(AmzSpApi::ShippingApiModel::ShippingApi)
    end
  end

  # unit tests for cancel_shipment
  # Cancels a purchased shipment. Returns an empty object if the shipment is successfully cancelled.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
  # @param shipment_id The shipment identifier originally returned by the purchaseShipment operation.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_amzn_shipping_business_id Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
  # @return [CancelShipmentResponse]
  describe 'cancel_shipment test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_claim
  # This API will be used to create claim for single eligible shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
  # @param body Request body for the createClaim operation
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_amzn_shipping_business_id Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
  # @return [CreateClaimResponse]
  describe 'create_claim test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for direct_purchase_shipment
  # Purchases the shipping service for a shipment using the best fit service offering. Returns purchase related details and documents.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
  # @param body DirectPurchaseRequest body
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_amzn_idempotency_key A unique value which the server uses to recognize subsequent retries of the same request.
  # @option opts [String] :locale The IETF Language Tag. Note that this only supports the primary language subtag with one secondary language subtag (i.e. en-US, fr-CA). The secondary language subtag is almost always a regional designation. This does not support additional subtags beyond the primary and secondary language subtags. 
  # @option opts [String] :x_amzn_shipping_business_id Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
  # @return [DirectPurchaseResponse]
  describe 'direct_purchase_shipment test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for generate_collection_form
  # This API  Call to generate the collection form.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
  # @param body GenerateCollectionFormRequest body
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_amzn_idempotency_key A unique value which the server uses to recognize subsequent retries of the same request.
  # @option opts [String] :x_amzn_shipping_business_id Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
  # @return [GenerateCollectionFormResponse]
  describe 'generate_collection_form test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_access_points
  # Returns a list of access points in proximity of input postal code.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
  # @param access_point_types Access point types
  # @param country_code Country code for access point
  # @param postal_code postal code for access point
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_amzn_shipping_business_id Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
  # @return [GetAccessPointsResponse]
  describe 'get_access_points test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_additional_inputs
  # Returns the JSON schema to use for providing additional inputs when needed to purchase a shipping offering. Call the getAdditionalInputs operation when the response to a previous call to the getRates operation indicates that additional inputs are required for the rate (shipping offering) that you want to purchase.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
  # @param request_token The request token returned in the response to the getRates operation.
  # @param rate_id The rate identifier for the shipping offering (rate) returned in the response to the getRates operation.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_amzn_shipping_business_id Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
  # @return [GetAdditionalInputsResponse]
  describe 'get_additional_inputs test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_carrier_account_form_inputs
  # This API will return a list of input schema required to register a shipper account with the carrier.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_amzn_shipping_business_id Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
  # @return [GetCarrierAccountFormInputsResponse]
  describe 'get_carrier_account_form_inputs test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_carrier_accounts
  # This API will return Get all carrier accounts for a merchant.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
  # @param body GetCarrierAccountsRequest body
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_amzn_shipping_business_id Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
  # @return [GetCarrierAccountsResponse]
  describe 'get_carrier_accounts test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_collection_form
  # This API reprint a collection form.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
  # @param collection_form_id collection form Id to reprint a collection.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_amzn_shipping_business_id Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
  # @return [GetCollectionFormResponse]
  describe 'get_collection_form test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_collection_form_history
  # This API Call to get the history of the previously generated collection forms.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
  # @param body GetCollectionFormHistoryRequest body
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_amzn_shipping_business_id Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
  # @return [GetCollectionFormHistoryResponse]
  describe 'get_collection_form_history test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_rates
  # Returns the available shipping service offerings.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
  # @param body GetRatesRequest body
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_amzn_shipping_business_id Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
  # @return [GetRatesResponse]
  describe 'get_rates test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_shipment_documents
  # Returns the shipping documents associated with a package in a shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
  # @param shipment_id The shipment identifier originally returned by the purchaseShipment operation.
  # @param package_client_reference_id The package client reference identifier originally provided in the request body parameter for the getRates operation.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :format The file format of the document. Must be one of the supported formats returned by the getRates operation.
  # @option opts [BigDecimal] :dpi The resolution of the document (for example, 300 means 300 dots per inch). Must be one of the supported resolutions returned in the response to the getRates operation.
  # @option opts [String] :x_amzn_shipping_business_id Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
  # @return [GetShipmentDocumentsResponse]
  describe 'get_shipment_documents test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_tracking
  # Returns tracking information for a purchased shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
  # @param tracking_id A carrier-generated tracking identifier originally returned by the purchaseShipment operation.
  # @param carrier_id A carrier identifier originally returned by the getRates operation for the selected rate.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_amzn_shipping_business_id Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
  # @return [GetTrackingResponse]
  describe 'get_tracking test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_unmanifested_shipments
  # This API Get all unmanifested carriers with shipment locations. Any locations which has unmanifested shipments         with an eligible carrier for manifesting shall be returned.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
  # @param body GetUmanifestedShipmentsRequest body
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_amzn_shipping_business_id Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
  # @return [GetUnmanifestedShipmentsResponse]
  describe 'get_unmanifested_shipments test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for link_carrier_account
  # This API associates/links the specified carrier account with the merchant.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
  # @param body LinkCarrierAccountRequest body
  # @param carrier_id An identifier for the carrier with which the seller&#x27;s account is being linked.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_amzn_shipping_business_id Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
  # @return [LinkCarrierAccountResponse]
  describe 'link_carrier_account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for link_carrier_account_0
  # This API associates/links the specified carrier account with the merchant.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 5 | 10 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
  # @param body LinkCarrierAccountRequest body
  # @param carrier_id An identifier for the carrier with which the seller&#x27;s account is being linked.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_amzn_shipping_business_id Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
  # @return [LinkCarrierAccountResponse]
  describe 'link_carrier_account_0 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for one_click_shipment
  # Purchases a shipping service identifier and returns purchase-related details and documents.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
  # @param body OneClickShipmentRequest body
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_amzn_shipping_business_id Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
  # @return [OneClickShipmentResponse]
  describe 'one_click_shipment test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for purchase_shipment
  # Purchases a shipping service and returns purchase related details and documents.  Note: You must complete the purchase within 10 minutes of rate creation by the shipping service provider. If you make the request after the 10 minutes have expired, you will receive an error response with the error code equal to \&quot;TOKEN_EXPIRED\&quot;. If you receive this error response, you must get the rates for the shipment again.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
  # @param body PurchaseShipmentRequest body
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_amzn_idempotency_key A unique value which the server uses to recognize subsequent retries of the same request.
  # @option opts [String] :x_amzn_shipping_business_id Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
  # @return [PurchaseShipmentResponse]
  describe 'purchase_shipment test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for submit_ndr_feedback
  # This API submits the NDR (Non-delivery Report) Feedback for any eligible shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
  # @param body Request body for ndrFeedback operation
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_amzn_shipping_business_id Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
  # @return [nil]
  describe 'submit_ndr_feedback test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for unlink_carrier_account
  # This API Unlink the specified carrier account with the merchant.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
  # @param body UnlinkCarrierAccountRequest body
  # @param carrier_id carrier Id to unlink with merchant.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_amzn_shipping_business_id Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
  # @return [UnlinkCarrierAccountResponse]
  describe 'unlink_carrier_account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
