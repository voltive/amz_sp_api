=begin
#Selling Partner API for Fulfillment Inbound

#The Selling Partner API for Fulfillment Inbound lets you create applications that create and update inbound shipments of inventory to Amazon's fulfillment network.

OpenAPI spec version: v0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.68
=end

module AmzSpApi::FulfillmentInboundV0
  class FbaInboundApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Returns a bill of lading for a Less Than Truckload/Full Truckload (LTL/FTL) shipment. The getBillOfLading operation returns PDF document data for printing a bill of lading for an Amazon-partnered Less Than Truckload/Full Truckload (LTL/FTL) inbound shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
    # @param shipment_id A shipment identifier originally returned by the createInboundShipmentPlan operation.
    # @param [Hash] opts the optional parameters
    # @return [GetBillOfLadingResponse]
    def get_bill_of_lading(shipment_id, opts = {})
      data, _status_code, _headers = get_bill_of_lading_with_http_info(shipment_id, opts)
      data
    end

    # Returns a bill of lading for a Less Than Truckload/Full Truckload (LTL/FTL) shipment. The getBillOfLading operation returns PDF document data for printing a bill of lading for an Amazon-partnered Less Than Truckload/Full Truckload (LTL/FTL) inbound shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
    # @param shipment_id A shipment identifier originally returned by the createInboundShipmentPlan operation.
    # @param [Hash] opts the optional parameters
    # @return [Array<(GetBillOfLadingResponse, Integer, Hash)>] GetBillOfLadingResponse data, response status code and response headers
    def get_bill_of_lading_with_http_info(shipment_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: FbaInboundApi.get_bill_of_lading ...'
      end
      # verify the required parameter 'shipment_id' is set
      if @api_client.config.client_side_validation && shipment_id.nil?
        fail ArgumentError, "Missing the required parameter 'shipment_id' when calling FbaInboundApi.get_bill_of_lading"
      end
      # resource path
      local_var_path = '/fba/inbound/v0/shipments/{shipmentId}/billOfLading'.sub('{' + 'shipmentId' + '}', shipment_id.to_s)

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] || 'GetBillOfLadingResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: FbaInboundApi#get_bill_of_lading\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Returns package/pallet labels for faster and more accurate shipment processing at the Amazon fulfillment center.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
    # @param shipment_id A shipment identifier originally returned by the createInboundShipmentPlan operation.
    # @param page_type The page type to use to print the labels. Submitting a PageType value that is not supported in your marketplace returns an error.
    # @param label_type The type of labels requested. 
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :number_of_packages The number of packages in the shipment.
    # @option opts [Array<String>] :package_labels_to_print A list of identifiers that specify packages for which you want package labels printed.  If you provide box content information with the [FBA Inbound Shipment Carton Information Feed](https://developer-docs.amazon.com/sp-api/docs/fulfillment-by-amazon-feed-type-values#fba-inbound-shipment-carton-information-feed), then &#x60;PackageLabelsToPrint&#x60; must match the &#x60;CartonId&#x60; values you provide through that feed. If you provide box content information with the Fulfillment Inbound API v2024-03-20, then &#x60;PackageLabelsToPrint&#x60; must match the &#x60;boxID&#x60; values from the [&#x60;listShipmentBoxes&#x60;](https://developer-docs.amazon.com/sp-api/docs/fulfillment-inbound-api-v2024-03-20-reference#listshipmentboxes) response. If these values do not match as required, the operation returns the &#x60;IncorrectPackageIdentifier&#x60; error code.
    # @option opts [Integer] :number_of_pallets The number of pallets in the shipment. This returns four identical labels for each pallet.
    # @option opts [Integer] :page_size The page size for paginating through the total packages&#x27; labels. This is a required parameter for Non-Partnered LTL Shipments. Max value:1000.
    # @option opts [Integer] :page_start_index The page start index for paginating through the total packages&#x27; labels. This is a required parameter for Non-Partnered LTL Shipments.
    # @return [GetLabelsResponse]
    def get_labels(shipment_id, page_type, label_type, opts = {})
      data, _status_code, _headers = get_labels_with_http_info(shipment_id, page_type, label_type, opts)
      data
    end

    # Returns package/pallet labels for faster and more accurate shipment processing at the Amazon fulfillment center.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
    # @param shipment_id A shipment identifier originally returned by the createInboundShipmentPlan operation.
    # @param page_type The page type to use to print the labels. Submitting a PageType value that is not supported in your marketplace returns an error.
    # @param label_type The type of labels requested. 
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :number_of_packages The number of packages in the shipment.
    # @option opts [Array<String>] :package_labels_to_print A list of identifiers that specify packages for which you want package labels printed.  If you provide box content information with the [FBA Inbound Shipment Carton Information Feed](https://developer-docs.amazon.com/sp-api/docs/fulfillment-by-amazon-feed-type-values#fba-inbound-shipment-carton-information-feed), then &#x60;PackageLabelsToPrint&#x60; must match the &#x60;CartonId&#x60; values you provide through that feed. If you provide box content information with the Fulfillment Inbound API v2024-03-20, then &#x60;PackageLabelsToPrint&#x60; must match the &#x60;boxID&#x60; values from the [&#x60;listShipmentBoxes&#x60;](https://developer-docs.amazon.com/sp-api/docs/fulfillment-inbound-api-v2024-03-20-reference#listshipmentboxes) response. If these values do not match as required, the operation returns the &#x60;IncorrectPackageIdentifier&#x60; error code.
    # @option opts [Integer] :number_of_pallets The number of pallets in the shipment. This returns four identical labels for each pallet.
    # @option opts [Integer] :page_size The page size for paginating through the total packages&#x27; labels. This is a required parameter for Non-Partnered LTL Shipments. Max value:1000.
    # @option opts [Integer] :page_start_index The page start index for paginating through the total packages&#x27; labels. This is a required parameter for Non-Partnered LTL Shipments.
    # @return [Array<(GetLabelsResponse, Integer, Hash)>] GetLabelsResponse data, response status code and response headers
    def get_labels_with_http_info(shipment_id, page_type, label_type, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: FbaInboundApi.get_labels ...'
      end
      # verify the required parameter 'shipment_id' is set
      if @api_client.config.client_side_validation && shipment_id.nil?
        fail ArgumentError, "Missing the required parameter 'shipment_id' when calling FbaInboundApi.get_labels"
      end
      # verify the required parameter 'page_type' is set
      if @api_client.config.client_side_validation && page_type.nil?
        fail ArgumentError, "Missing the required parameter 'page_type' when calling FbaInboundApi.get_labels"
      end
      # verify enum value
      if @api_client.config.client_side_validation && !['PackageLabel_Letter_2', 'PackageLabel_Letter_4', 'PackageLabel_Letter_6', 'PackageLabel_Letter_6_CarrierLeft', 'PackageLabel_A4_2', 'PackageLabel_A4_4', 'PackageLabel_Plain_Paper', 'PackageLabel_Plain_Paper_CarrierBottom', 'PackageLabel_Thermal', 'PackageLabel_Thermal_Unified', 'PackageLabel_Thermal_NonPCP', 'PackageLabel_Thermal_No_Carrier_Rotation'].include?(page_type)
        fail ArgumentError, "invalid value for 'page_type', must be one of PackageLabel_Letter_2, PackageLabel_Letter_4, PackageLabel_Letter_6, PackageLabel_Letter_6_CarrierLeft, PackageLabel_A4_2, PackageLabel_A4_4, PackageLabel_Plain_Paper, PackageLabel_Plain_Paper_CarrierBottom, PackageLabel_Thermal, PackageLabel_Thermal_Unified, PackageLabel_Thermal_NonPCP, PackageLabel_Thermal_No_Carrier_Rotation"
      end
      # verify the required parameter 'label_type' is set
      if @api_client.config.client_side_validation && label_type.nil?
        fail ArgumentError, "Missing the required parameter 'label_type' when calling FbaInboundApi.get_labels"
      end
      # verify enum value
      if @api_client.config.client_side_validation && !['BARCODE_2D', 'UNIQUE', 'PALLET'].include?(label_type)
        fail ArgumentError, "invalid value for 'label_type', must be one of BARCODE_2D, UNIQUE, PALLET"
      end
      # resource path
      local_var_path = '/fba/inbound/v0/shipments/{shipmentId}/labels'.sub('{' + 'shipmentId' + '}', shipment_id.to_s)

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'PageType'] = page_type
      query_params[:'LabelType'] = label_type
      query_params[:'NumberOfPackages'] = opts[:'number_of_packages'] if !opts[:'number_of_packages'].nil?
      query_params[:'PackageLabelsToPrint'] = @api_client.build_collection_param(opts[:'package_labels_to_print'], :csv) if !opts[:'package_labels_to_print'].nil?
      query_params[:'NumberOfPallets'] = opts[:'number_of_pallets'] if !opts[:'number_of_pallets'].nil?
      query_params[:'PageSize'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'PageStartIndex'] = opts[:'page_start_index'] if !opts[:'page_start_index'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] || 'GetLabelsResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: FbaInboundApi#get_labels\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Returns labeling requirements and item preparation instructions to help prepare items for shipment to Amazon's fulfillment network.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
    # @param ship_to_country_code The country code of the country to which the items will be shipped. Note that labeling requirements and item preparation instructions can vary by country.
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :seller_sku_list A list of SellerSKU values. Used to identify items for which you want labeling requirements and item preparation instructions for shipment to Amazon&#x27;s fulfillment network. The SellerSKU is qualified by the Seller ID, which is included with every call to the Seller Partner API.  Note: Include seller SKUs that you have used to list items on Amazon&#x27;s retail website. If you include a seller SKU that you have never used to list an item on Amazon&#x27;s retail website, the seller SKU is returned in the InvalidSKUList property in the response.
    # @option opts [Array<String>] :asin_list A list of ASIN values. Used to identify items for which you want item preparation instructions to help with item sourcing decisions.  Note: ASINs must be included in the product catalog for at least one of the marketplaces that the seller  participates in. Any ASIN that is not included in the product catalog for at least one of the marketplaces that the seller participates in is returned in the InvalidASINList property in the response. You can find out which marketplaces a seller participates in by calling the getMarketplaceParticipations operation in the Selling Partner API for Sellers.
    # @return [GetPrepInstructionsResponse]
    def get_prep_instructions(ship_to_country_code, opts = {})
      data, _status_code, _headers = get_prep_instructions_with_http_info(ship_to_country_code, opts)
      data
    end

    # Returns labeling requirements and item preparation instructions to help prepare items for shipment to Amazon&#x27;s fulfillment network.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
    # @param ship_to_country_code The country code of the country to which the items will be shipped. Note that labeling requirements and item preparation instructions can vary by country.
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :seller_sku_list A list of SellerSKU values. Used to identify items for which you want labeling requirements and item preparation instructions for shipment to Amazon&#x27;s fulfillment network. The SellerSKU is qualified by the Seller ID, which is included with every call to the Seller Partner API.  Note: Include seller SKUs that you have used to list items on Amazon&#x27;s retail website. If you include a seller SKU that you have never used to list an item on Amazon&#x27;s retail website, the seller SKU is returned in the InvalidSKUList property in the response.
    # @option opts [Array<String>] :asin_list A list of ASIN values. Used to identify items for which you want item preparation instructions to help with item sourcing decisions.  Note: ASINs must be included in the product catalog for at least one of the marketplaces that the seller  participates in. Any ASIN that is not included in the product catalog for at least one of the marketplaces that the seller participates in is returned in the InvalidASINList property in the response. You can find out which marketplaces a seller participates in by calling the getMarketplaceParticipations operation in the Selling Partner API for Sellers.
    # @return [Array<(GetPrepInstructionsResponse, Integer, Hash)>] GetPrepInstructionsResponse data, response status code and response headers
    def get_prep_instructions_with_http_info(ship_to_country_code, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: FbaInboundApi.get_prep_instructions ...'
      end
      # verify the required parameter 'ship_to_country_code' is set
      if @api_client.config.client_side_validation && ship_to_country_code.nil?
        fail ArgumentError, "Missing the required parameter 'ship_to_country_code' when calling FbaInboundApi.get_prep_instructions"
      end
      # resource path
      local_var_path = '/fba/inbound/v0/prepInstructions'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'ShipToCountryCode'] = ship_to_country_code
      query_params[:'SellerSKUList'] = @api_client.build_collection_param(opts[:'seller_sku_list'], :csv) if !opts[:'seller_sku_list'].nil?
      query_params[:'ASINList'] = @api_client.build_collection_param(opts[:'asin_list'], :csv) if !opts[:'asin_list'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] || 'GetPrepInstructionsResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: FbaInboundApi#get_prep_instructions\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Returns a list of items in a specified inbound shipment, or a list of items that were updated within a specified time frame.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
    # @param query_type Indicates whether items are returned using a date range (by providing the LastUpdatedAfter and LastUpdatedBefore parameters), or using NextToken, which continues returning items specified in a previous request.
    # @param marketplace_id A marketplace identifier. Specifies the marketplace where the product would be stored.
    # @param [Hash] opts the optional parameters
    # @option opts [DateTime] :last_updated_after A date used for selecting inbound shipment items that were last updated after (or at) a specified time. The selection includes updates made by Amazon and by the seller.
    # @option opts [DateTime] :last_updated_before A date used for selecting inbound shipment items that were last updated before (or at) a specified time. The selection includes updates made by Amazon and by the seller.
    # @option opts [String] :next_token A string token returned in the response to your previous request.
    # @return [GetShipmentItemsResponse]
    def get_shipment_items(query_type, marketplace_id, opts = {})
      data, _status_code, _headers = get_shipment_items_with_http_info(query_type, marketplace_id, opts)
      data
    end

    # Returns a list of items in a specified inbound shipment, or a list of items that were updated within a specified time frame.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
    # @param query_type Indicates whether items are returned using a date range (by providing the LastUpdatedAfter and LastUpdatedBefore parameters), or using NextToken, which continues returning items specified in a previous request.
    # @param marketplace_id A marketplace identifier. Specifies the marketplace where the product would be stored.
    # @param [Hash] opts the optional parameters
    # @option opts [DateTime] :last_updated_after A date used for selecting inbound shipment items that were last updated after (or at) a specified time. The selection includes updates made by Amazon and by the seller.
    # @option opts [DateTime] :last_updated_before A date used for selecting inbound shipment items that were last updated before (or at) a specified time. The selection includes updates made by Amazon and by the seller.
    # @option opts [String] :next_token A string token returned in the response to your previous request.
    # @return [Array<(GetShipmentItemsResponse, Integer, Hash)>] GetShipmentItemsResponse data, response status code and response headers
    def get_shipment_items_with_http_info(query_type, marketplace_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: FbaInboundApi.get_shipment_items ...'
      end
      # verify the required parameter 'query_type' is set
      if @api_client.config.client_side_validation && query_type.nil?
        fail ArgumentError, "Missing the required parameter 'query_type' when calling FbaInboundApi.get_shipment_items"
      end
      # verify enum value
      if @api_client.config.client_side_validation && !['DATE_RANGE', 'NEXT_TOKEN'].include?(query_type)
        fail ArgumentError, "invalid value for 'query_type', must be one of DATE_RANGE, NEXT_TOKEN"
      end
      # verify the required parameter 'marketplace_id' is set
      if @api_client.config.client_side_validation && marketplace_id.nil?
        fail ArgumentError, "Missing the required parameter 'marketplace_id' when calling FbaInboundApi.get_shipment_items"
      end
      # resource path
      local_var_path = '/fba/inbound/v0/shipmentItems'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'QueryType'] = query_type
      query_params[:'MarketplaceId'] = marketplace_id
      query_params[:'LastUpdatedAfter'] = opts[:'last_updated_after'] if !opts[:'last_updated_after'].nil?
      query_params[:'LastUpdatedBefore'] = opts[:'last_updated_before'] if !opts[:'last_updated_before'].nil?
      query_params[:'NextToken'] = opts[:'next_token'] if !opts[:'next_token'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] || 'GetShipmentItemsResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: FbaInboundApi#get_shipment_items\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Returns a list of items in a specified inbound shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
    # @param shipment_id A shipment identifier used for selecting items in a specific inbound shipment.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :marketplace_id Deprecated. Do not use.
    # @return [GetShipmentItemsResponse]
    def get_shipment_items_by_shipment_id(shipment_id, opts = {})
      data, _status_code, _headers = get_shipment_items_by_shipment_id_with_http_info(shipment_id, opts)
      data
    end

    # Returns a list of items in a specified inbound shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
    # @param shipment_id A shipment identifier used for selecting items in a specific inbound shipment.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :marketplace_id Deprecated. Do not use.
    # @return [Array<(GetShipmentItemsResponse, Integer, Hash)>] GetShipmentItemsResponse data, response status code and response headers
    def get_shipment_items_by_shipment_id_with_http_info(shipment_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: FbaInboundApi.get_shipment_items_by_shipment_id ...'
      end
      # verify the required parameter 'shipment_id' is set
      if @api_client.config.client_side_validation && shipment_id.nil?
        fail ArgumentError, "Missing the required parameter 'shipment_id' when calling FbaInboundApi.get_shipment_items_by_shipment_id"
      end
      # resource path
      local_var_path = '/fba/inbound/v0/shipments/{shipmentId}/items'.sub('{' + 'shipmentId' + '}', shipment_id.to_s)

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'MarketplaceId'] = opts[:'marketplace_id'] if !opts[:'marketplace_id'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] || 'GetShipmentItemsResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: FbaInboundApi#get_shipment_items_by_shipment_id\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Returns a list of inbound shipments based on criteria that you specify.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
    # @param query_type Indicates whether shipments are returned using shipment information (by providing the ShipmentStatusList or ShipmentIdList parameters), using a date range (by providing the LastUpdatedAfter and LastUpdatedBefore parameters), or by using NextToken to continue returning items specified in a previous request.
    # @param marketplace_id A marketplace identifier. Specifies the marketplace where the product would be stored.
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :shipment_status_list A list of ShipmentStatus values. Used to select shipments with a current status that matches the status values that you specify.
    # @option opts [Array<String>] :shipment_id_list A list of shipment IDs used to select the shipments that you want. If both ShipmentStatusList and ShipmentIdList are specified, only shipments that match both parameters are returned.
    # @option opts [DateTime] :last_updated_after A date used for selecting inbound shipments that were last updated after (or at) a specified time. The selection includes updates made by Amazon and by the seller.
    # @option opts [DateTime] :last_updated_before A date used for selecting inbound shipments that were last updated before (or at) a specified time. The selection includes updates made by Amazon and by the seller.
    # @option opts [String] :next_token A string token returned in the response to your previous request.
    # @return [GetShipmentsResponse]
    def get_shipments(query_type, marketplace_id, opts = {})
      data, _status_code, _headers = get_shipments_with_http_info(query_type, marketplace_id, opts)
      data
    end

    # Returns a list of inbound shipments based on criteria that you specify.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
    # @param query_type Indicates whether shipments are returned using shipment information (by providing the ShipmentStatusList or ShipmentIdList parameters), using a date range (by providing the LastUpdatedAfter and LastUpdatedBefore parameters), or by using NextToken to continue returning items specified in a previous request.
    # @param marketplace_id A marketplace identifier. Specifies the marketplace where the product would be stored.
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :shipment_status_list A list of ShipmentStatus values. Used to select shipments with a current status that matches the status values that you specify.
    # @option opts [Array<String>] :shipment_id_list A list of shipment IDs used to select the shipments that you want. If both ShipmentStatusList and ShipmentIdList are specified, only shipments that match both parameters are returned.
    # @option opts [DateTime] :last_updated_after A date used for selecting inbound shipments that were last updated after (or at) a specified time. The selection includes updates made by Amazon and by the seller.
    # @option opts [DateTime] :last_updated_before A date used for selecting inbound shipments that were last updated before (or at) a specified time. The selection includes updates made by Amazon and by the seller.
    # @option opts [String] :next_token A string token returned in the response to your previous request.
    # @return [Array<(GetShipmentsResponse, Integer, Hash)>] GetShipmentsResponse data, response status code and response headers
    def get_shipments_with_http_info(query_type, marketplace_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: FbaInboundApi.get_shipments ...'
      end
      # verify the required parameter 'query_type' is set
      if @api_client.config.client_side_validation && query_type.nil?
        fail ArgumentError, "Missing the required parameter 'query_type' when calling FbaInboundApi.get_shipments"
      end
      # verify enum value
      if @api_client.config.client_side_validation && !['SHIPMENT', 'DATE_RANGE', 'NEXT_TOKEN'].include?(query_type)
        fail ArgumentError, "invalid value for 'query_type', must be one of SHIPMENT, DATE_RANGE, NEXT_TOKEN"
      end
      # verify the required parameter 'marketplace_id' is set
      if @api_client.config.client_side_validation && marketplace_id.nil?
        fail ArgumentError, "Missing the required parameter 'marketplace_id' when calling FbaInboundApi.get_shipments"
      end
      if @api_client.config.client_side_validation && opts[:'shipment_status_list'] && !opts[:'shipment_status_list'].all? { |item| ['WORKING', 'READY_TO_SHIP', 'SHIPPED', 'RECEIVING', 'CANCELLED', 'DELETED', 'CLOSED', 'ERROR', 'IN_TRANSIT', 'DELIVERED', 'CHECKED_IN'].include?(item) }
        fail ArgumentError, 'invalid value for "shipment_status_list", must include one of WORKING, READY_TO_SHIP, SHIPPED, RECEIVING, CANCELLED, DELETED, CLOSED, ERROR, IN_TRANSIT, DELIVERED, CHECKED_IN'
      end
      # resource path
      local_var_path = '/fba/inbound/v0/shipments'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'QueryType'] = query_type
      query_params[:'MarketplaceId'] = marketplace_id
      query_params[:'ShipmentStatusList'] = @api_client.build_collection_param(opts[:'shipment_status_list'], :csv) if !opts[:'shipment_status_list'].nil?
      query_params[:'ShipmentIdList'] = @api_client.build_collection_param(opts[:'shipment_id_list'], :csv) if !opts[:'shipment_id_list'].nil?
      query_params[:'LastUpdatedAfter'] = opts[:'last_updated_after'] if !opts[:'last_updated_after'].nil?
      query_params[:'LastUpdatedBefore'] = opts[:'last_updated_before'] if !opts[:'last_updated_before'].nil?
      query_params[:'NextToken'] = opts[:'next_token'] if !opts[:'next_token'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] || 'GetShipmentsResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: FbaInboundApi#get_shipments\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
