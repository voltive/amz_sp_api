=begin
#Amazon Shipping API

#The Amazon Shipping API is designed to support outbound shipping use cases both for orders originating on Amazon-owned marketplaces as well as external channels/marketplaces. With these APIs, you can request shipping rates, create shipments, cancel shipments, and track shipments.

OpenAPI spec version: v2
Contact: swa-api-core@amazon.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.68
=end

# Common files
require 'shipping_v2/api_client'
require 'shipping_v2/api_error'
require 'shipping_v2/version'
require 'shipping_v2/configuration'

# Models
require 'shipping_v2/models/access_point'
require 'shipping_v2/models/access_point_details'
require 'shipping_v2/models/access_point_id'
require 'shipping_v2/models/access_point_list'
require 'shipping_v2/models/access_point_type'
require 'shipping_v2/models/access_points_map'
require 'shipping_v2/models/accessibility_attributes'
require 'shipping_v2/models/account_id'
require 'shipping_v2/models/account_status'
require 'shipping_v2/models/account_type'
require 'shipping_v2/models/active_account'
require 'shipping_v2/models/active_accounts'
require 'shipping_v2/models/additional_address_notes'
require 'shipping_v2/models/address'
require 'shipping_v2/models/alternate_leg_tracking_id'
require 'shipping_v2/models/amazon_order_details'
require 'shipping_v2/models/amazon_shipment_details'
require 'shipping_v2/models/available_value_added_service_group'
require 'shipping_v2/models/available_value_added_service_group_list'
require 'shipping_v2/models/benefits'
require 'shipping_v2/models/cancel_shipment_response'
require 'shipping_v2/models/cancel_shipment_result'
require 'shipping_v2/models/carrier'
require 'shipping_v2/models/carrier_account'
require 'shipping_v2/models/carrier_account_attribute'
require 'shipping_v2/models/carrier_account_attributes'
require 'shipping_v2/models/carrier_account_input'
require 'shipping_v2/models/carrier_account_inputs_list'
require 'shipping_v2/models/carrier_account_type'
require 'shipping_v2/models/carrier_accounts'
require 'shipping_v2/models/carrier_id'
require 'shipping_v2/models/carrier_name'
require 'shipping_v2/models/channel_details'
require 'shipping_v2/models/channel_type'
require 'shipping_v2/models/charge_component'
require 'shipping_v2/models/charge_list'
require 'shipping_v2/models/city'
require 'shipping_v2/models/claim_id'
require 'shipping_v2/models/claim_proof_urls'
require 'shipping_v2/models/claim_reason'
require 'shipping_v2/models/client_reference_detail'
require 'shipping_v2/models/client_reference_details'
require 'shipping_v2/models/collect_on_delivery'
require 'shipping_v2/models/collection_form_id'
require 'shipping_v2/models/collection_forms_history_record'
require 'shipping_v2/models/collection_forms_history_record_list'
require 'shipping_v2/models/collections_form_document'
require 'shipping_v2/models/contents'
require 'shipping_v2/models/country_code'
require 'shipping_v2/models/create_claim_request'
require 'shipping_v2/models/create_claim_response'
require 'shipping_v2/models/currency'
require 'shipping_v2/models/dangerous_goods_details'
require 'shipping_v2/models/date_range'
require 'shipping_v2/models/day_of_week_time_map'
require 'shipping_v2/models/detail_codes'
require 'shipping_v2/models/dimensions'
require 'shipping_v2/models/direct_fulfillment_item_identifiers'
require 'shipping_v2/models/direct_purchase_request'
require 'shipping_v2/models/direct_purchase_response'
require 'shipping_v2/models/direct_purchase_result'
require 'shipping_v2/models/document_format'
require 'shipping_v2/models/document_size'
require 'shipping_v2/models/document_type'
require 'shipping_v2/models/dpi'
require 'shipping_v2/models/error'
require 'shipping_v2/models/error_list'
require 'shipping_v2/models/event'
require 'shipping_v2/models/event_code'
require 'shipping_v2/models/exception_operating_hours'
require 'shipping_v2/models/excluded_benefit'
require 'shipping_v2/models/excluded_benefit_reason_codes'
require 'shipping_v2/models/excluded_benefits'
require 'shipping_v2/models/generate_collection_form_request'
require 'shipping_v2/models/generate_collection_form_response'
require 'shipping_v2/models/generation_status'
require 'shipping_v2/models/geocode'
require 'shipping_v2/models/get_access_points_response'
require 'shipping_v2/models/get_access_points_result'
require 'shipping_v2/models/get_additional_inputs_response'
require 'shipping_v2/models/get_additional_inputs_result'
require 'shipping_v2/models/get_carrier_account_form_inputs_response'
require 'shipping_v2/models/get_carrier_accounts_request'
require 'shipping_v2/models/get_carrier_accounts_response'
require 'shipping_v2/models/get_collection_form_history_request'
require 'shipping_v2/models/get_collection_form_history_response'
require 'shipping_v2/models/get_collection_form_response'
require 'shipping_v2/models/get_rates_request'
require 'shipping_v2/models/get_rates_response'
require 'shipping_v2/models/get_rates_result'
require 'shipping_v2/models/get_shipment_documents_response'
require 'shipping_v2/models/get_shipment_documents_result'
require 'shipping_v2/models/get_tracking_response'
require 'shipping_v2/models/get_tracking_result'
require 'shipping_v2/models/get_unmanifested_shipments_request'
require 'shipping_v2/models/get_unmanifested_shipments_response'
require 'shipping_v2/models/goods_owner'
require 'shipping_v2/models/included_benefits'
require 'shipping_v2/models/ineligibility_reason'
require 'shipping_v2/models/ineligibility_reason_code'
require 'shipping_v2/models/ineligible_rate'
require 'shipping_v2/models/ineligible_rate_list'
require 'shipping_v2/models/input_type'
require 'shipping_v2/models/invoice_details'
require 'shipping_v2/models/item'
require 'shipping_v2/models/item_list'
require 'shipping_v2/models/label_attribute'
require 'shipping_v2/models/link_carrier_account_request'
require 'shipping_v2/models/link_carrier_account_response'
require 'shipping_v2/models/linkable_account_type'
require 'shipping_v2/models/linkable_account_type_list'
require 'shipping_v2/models/linkable_carrier'
require 'shipping_v2/models/linkable_carriers_list'
require 'shipping_v2/models/liquid_volume'
require 'shipping_v2/models/location'
require 'shipping_v2/models/merchant_id'
require 'shipping_v2/models/ndr_action'
require 'shipping_v2/models/ndr_request_data'
require 'shipping_v2/models/need_file_joining'
require 'shipping_v2/models/one_click_shipment_request'
require 'shipping_v2/models/one_click_shipment_response'
require 'shipping_v2/models/one_click_shipment_result'
require 'shipping_v2/models/one_click_shipment_value_added_service'
require 'shipping_v2/models/one_click_shipment_value_added_service_details'
require 'shipping_v2/models/operating_hours'
require 'shipping_v2/models/package'
require 'shipping_v2/models/package_client_reference_id'
require 'shipping_v2/models/package_document'
require 'shipping_v2/models/package_document_detail'
require 'shipping_v2/models/package_document_detail_list'
require 'shipping_v2/models/package_document_list'
require 'shipping_v2/models/package_list'
require 'shipping_v2/models/page_layout'
require 'shipping_v2/models/payment_type'
require 'shipping_v2/models/postal_code'
require 'shipping_v2/models/print_option'
require 'shipping_v2/models/print_option_list'
require 'shipping_v2/models/promise'
require 'shipping_v2/models/purchase_shipment_request'
require 'shipping_v2/models/purchase_shipment_response'
require 'shipping_v2/models/purchase_shipment_result'
require 'shipping_v2/models/rate'
require 'shipping_v2/models/rate_id'
require 'shipping_v2/models/rate_item'
require 'shipping_v2/models/rate_item_id'
require 'shipping_v2/models/rate_item_list'
require 'shipping_v2/models/rate_item_type'
require 'shipping_v2/models/rate_list'
require 'shipping_v2/models/request_attributes'
require 'shipping_v2/models/request_token'
require 'shipping_v2/models/requested_document_specification'
require 'shipping_v2/models/requested_label_customization'
require 'shipping_v2/models/requested_value_added_service'
require 'shipping_v2/models/requested_value_added_service_list'
require 'shipping_v2/models/service'
require 'shipping_v2/models/service_id'
require 'shipping_v2/models/service_ids'
require 'shipping_v2/models/service_name'
require 'shipping_v2/models/service_selection'
require 'shipping_v2/models/settlement_type'
require 'shipping_v2/models/shipment_id'
require 'shipping_v2/models/shipment_type'
require 'shipping_v2/models/shipper_instruction'
require 'shipping_v2/models/state_or_region'
require 'shipping_v2/models/status'
require 'shipping_v2/models/submit_ndr_feedback_request'
require 'shipping_v2/models/supported_document_detail'
require 'shipping_v2/models/supported_document_specification'
require 'shipping_v2/models/supported_document_specification_list'
require 'shipping_v2/models/tax_detail'
require 'shipping_v2/models/tax_detail_list'
require 'shipping_v2/models/tax_type'
require 'shipping_v2/models/time_of_day'
require 'shipping_v2/models/time_window'
require 'shipping_v2/models/tracking_detail_codes'
require 'shipping_v2/models/tracking_id'
require 'shipping_v2/models/tracking_summary'
require 'shipping_v2/models/unlink_carrier_account_request'
require 'shipping_v2/models/unlink_carrier_account_response'
require 'shipping_v2/models/unmanifested_carrier_information'
require 'shipping_v2/models/unmanifested_carrier_information_list'
require 'shipping_v2/models/unmanifested_shipment_location'
require 'shipping_v2/models/unmanifested_shipment_location_list'
require 'shipping_v2/models/validation_metadata'
require 'shipping_v2/models/validation_metadata_list'
require 'shipping_v2/models/value_added_service'
require 'shipping_v2/models/value_added_service_details'
require 'shipping_v2/models/weight'

# APIs
require 'shipping_v2/api/shipping_api'

module AmzSpApi::ShippingV2
  class << self
    # Customize default settings for the SDK using block.
    #   AmzSpApi::ShippingV2.configure do |config|
    #     config.username = "xxx"
    #     config.password = "xxx"
    #   end
    # If no block given, return the default Configuration object.
    def configure
      if block_given?
        yield(Configuration.default)
      else
        Configuration.default
      end
    end
  end
end
