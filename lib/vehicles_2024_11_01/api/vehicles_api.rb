=begin
#The Selling Partner API for Automotive.

#The Selling Partner API for Automotive provides programmatic access to information needed by selling partners to provide compatibility information about their listed products.

OpenAPI spec version: 2024-11-01

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.68
=end

module AmzSpApi::Vehicles20241101
  class VehiclesApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Get the latest collection of vehicles
    # @param marketplace_id An identifier for the marketplace in which the resource operates.
    # @param vehicle_type An identifier for vehicle type.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :page_token A token to fetch a certain page when there are multiple pages worth of results.
    # @option opts [String] :updated_after Date in ISO 8601 format, if provided only vehicles which are modified/added to Amazon&#x27;s catalog after this date will be returned.
    # @return [VehiclesResponse]
    def get_vehicles(marketplace_id, vehicle_type, opts = {})
      data, _status_code, _headers = get_vehicles_with_http_info(marketplace_id, vehicle_type, opts)
      data
    end

    # Get the latest collection of vehicles
    # @param marketplace_id An identifier for the marketplace in which the resource operates.
    # @param vehicle_type An identifier for vehicle type.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :page_token A token to fetch a certain page when there are multiple pages worth of results.
    # @option opts [String] :updated_after Date in ISO 8601 format, if provided only vehicles which are modified/added to Amazon&#x27;s catalog after this date will be returned.
    # @return [Array<(VehiclesResponse, Integer, Hash)>] VehiclesResponse data, response status code and response headers
    def get_vehicles_with_http_info(marketplace_id, vehicle_type, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: VehiclesApi.get_vehicles ...'
      end
      # verify the required parameter 'marketplace_id' is set
      if @api_client.config.client_side_validation && marketplace_id.nil?
        fail ArgumentError, "Missing the required parameter 'marketplace_id' when calling VehiclesApi.get_vehicles"
      end
      # verify the required parameter 'vehicle_type' is set
      if @api_client.config.client_side_validation && vehicle_type.nil?
        fail ArgumentError, "Missing the required parameter 'vehicle_type' when calling VehiclesApi.get_vehicles"
      end
      # verify enum value
      if @api_client.config.client_side_validation && !['CAR', 'MOTORBIKE'].include?(vehicle_type)
        fail ArgumentError, "invalid value for 'vehicle_type', must be one of CAR, MOTORBIKE"
      end
      # resource path
      local_var_path = '/catalog/2024-11-01/automotive/vehicles'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'marketplaceId'] = marketplace_id
      query_params[:'vehicleType'] = vehicle_type
      query_params[:'pageToken'] = opts[:'page_token'] if !opts[:'page_token'].nil?
      query_params[:'updatedAfter'] = opts[:'updated_after'] if !opts[:'updated_after'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] || 'VehiclesResponse' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: VehiclesApi#get_vehicles\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
