=begin
#Selling Partner API for Supply Sources

#Manage configurations and capabilities of seller supply sources.

OpenAPI spec version: 2020-07-01

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.51
=end

# Common files
require 'supply-sources-api-model/api_client'
require 'supply-sources-api-model/api_error'
require 'supply-sources-api-model/version'
require 'supply-sources-api-model/configuration'

# Models
require 'supply-sources-api-model/models/address'
require 'supply-sources-api-model/models/address_with_contact'
require 'supply-sources-api-model/models/contact_details'
require 'supply-sources-api-model/models/contact_details_primary'
require 'supply-sources-api-model/models/create_supply_source_request'
require 'supply-sources-api-model/models/create_supply_source_response'
require 'supply-sources-api-model/models/curbside_pickup_configuration'
require 'supply-sources-api-model/models/date_time'
require 'supply-sources-api-model/models/delivery_channel'
require 'supply-sources-api-model/models/duration'
require 'supply-sources-api-model/models/email_address'
require 'supply-sources-api-model/models/error'
require 'supply-sources-api-model/models/error_list'
require 'supply-sources-api-model/models/get_supply_sources_response'
require 'supply-sources-api-model/models/in_store_pickup_configuration'
require 'supply-sources-api-model/models/non_negative_integer'
require 'supply-sources-api-model/models/operating_hour'
require 'supply-sources-api-model/models/operating_hours'
require 'supply-sources-api-model/models/operating_hours_by_day'
require 'supply-sources-api-model/models/operational_configuration'
require 'supply-sources-api-model/models/outbound_capability'
require 'supply-sources-api-model/models/parking_configuration'
require 'supply-sources-api-model/models/parking_cost_type'
require 'supply-sources-api-model/models/parking_spot_identification_type'
require 'supply-sources-api-model/models/parking_with_address_configuration'
require 'supply-sources-api-model/models/pickup_channel'
require 'supply-sources-api-model/models/return_location'
require 'supply-sources-api-model/models/services_capability'
require 'supply-sources-api-model/models/supply_source'
require 'supply-sources-api-model/models/supply_source_alias'
require 'supply-sources-api-model/models/supply_source_capabilities'
require 'supply-sources-api-model/models/supply_source_code'
require 'supply-sources-api-model/models/supply_source_configuration'
require 'supply-sources-api-model/models/supply_source_id'
require 'supply-sources-api-model/models/supply_source_list'
require 'supply-sources-api-model/models/supply_source_list_inner'
require 'supply-sources-api-model/models/supply_source_status'
require 'supply-sources-api-model/models/supply_source_status_read_only'
require 'supply-sources-api-model/models/throughput_cap'
require 'supply-sources-api-model/models/throughput_config'
require 'supply-sources-api-model/models/throughput_unit'
require 'supply-sources-api-model/models/time_unit'
require 'supply-sources-api-model/models/update_supply_source_request'
require 'supply-sources-api-model/models/update_supply_source_status_request'

# APIs
require 'supply-sources-api-model/api/supply_sources_api'

module AmzSpApi::SupplySourcesApiModel
  class << self
    # Customize default settings for the SDK using block.
    #   AmzSpApi::SupplySourcesApiModel.configure do |config|
    #     config.username = "xxx"
    #     config.password = "xxx"
    #   end
    # If no block given, return the default Configuration object.
    def configure
      if block_given?
        yield(Configuration.default)
      else
        Configuration.default
      end
    end
  end
end
